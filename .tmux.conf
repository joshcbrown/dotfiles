set-option -sa terminal-overrides ",xterm*:Tc"
set -g escape-time 10
set -g mouse on
set -g status-interval 5
setw -g mode-keys vi

unbind-key C-b
bind-key C-v send-prefix

set-option default-terminal "xterm-256color"
set-option -g allow-rename off

bind -T root MouseDown2Pane run -b "xclip -o | tmux load-buffer - && tmux paste-buffer -s ' '"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on


# Use Alt-arrow keys without prefix key to switch panes

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Shift Alt vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window
bind-key x kill-pane

bind-key ! break-pane -d -n _hidden_pane
bind-key @ join-pane -s $.0

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'schasse/tmux-jump'
set -g @plugin 'niksingh710/minimal-tmux-status'
# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# set resurrect to also resurrect neovim
set -g @resurrect-strategy-nvim 'session'
#if-shell "uname | awk '{exit !($1 == \"Darwin\")}'" \
#  "source '/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'"

#if-shell "uname | awk '{exit !($1 == \"Linux\")}'" \
# "source '/usr/share/tmux/powerline.conf'"

bind-key -n 'C-Left' 'select-pane -L'
bind-key -n 'C-Down' 'select-pane -D'
bind-key -n 'C-Up' 'select-pane -U'
bind-key -n 'C-Right' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-Left' select-pane -L
bind-key -T copy-mode-vi 'C-Down' select-pane -D
bind-key -T copy-mode-vi 'C-Up' select-pane -U
bind-key -T copy-mode-vi 'C-Right' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
